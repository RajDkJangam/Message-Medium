
# lodash babel-core babel-loader babel-preset-es2015 babel-preset-react react react-dom react-redux react-router react-router-redux redux redux-thunk webpack



// <IndexRoute component={EventIndexContainer} />
// <Route path="/events/new" component={EventFormContainer} />
// <Route path="/events" component={EventIndexContainer} />
// <Route path="/events/:eventId" component={EventShowContainer} />
// <Route path="/events/:eventId/edit" component={EventFormContainer} />


<img src='assets/missing.png' />

https://medium.com/@joethedave/achieving-ui-animations-with-react-the-right-way-562fa8a91935


console.log('hi');
let elem = document.getElementById('test').innerHTML;
console.log(elem);
 elem.addEventListener('select', function(e) {
   debugger
 alert('Selection changed! ' + e.currentTarget.value);
 }, false);


from Quill's medium clone:

CSS:

EDIT ON
 * {
  box-sizing: border-box;
}

html, body {
  height: 100%;
  margin: 0;
  padding: 0;
  width: 100%;
}

#editor-container {
  font-family: 'Open Sans', Helvetica, sans-serif;
  font-size: 1.2em;
  height: 100%;
  margin: 0 auto;
  width: 450px;
}
#editor-container .ql-editor {
  min-height: 100%;
  height: inherit;
  overflow-y: inherit;
  padding-bottom: 75px;
}
#editor-container .ql-editor > * {
  margin-top: 1.5em;
}
#editor-container .ql-editor > *:last-child {
  margin-bottom: 50px;
}
#editor-container h1 + p,
#editor-container h2 + p {
  margin-top: 0.5em;
}
#editor-container blockquote {
  border-left: 4px solid #111;
  padding-left: 1em;
}
#editor-container hr {
  border: none;
  color: #111;
  letter-spacing: 1em;
  text-align: center;
}
#editor-container hr:before {
  content: '...';
}

#tooltip-controls {
  background-color: #111;
  border-radius: 4px;
  display: none;
  padding: 5px 10px;
  position: absolute;
}
#tooltip-controls::before {
  box-sizing: border-box;
  border-bottom: 6px solid #111;
  border-left: 6px solid transparent;
  border-right: 6px solid transparent;
  content: ' ';
  display: block;
  height: 6px;
  left: 50%;
  position: absolute;
  margin-left: -6px;
  margin-top: -6px;
  top: 0;
  width: 6px;
}
#tooltip-controls button {
  background-color: transparent;
  color: #fff;
  border: none;
}
#tooltip-controls button.active {
  color: #21b384;
}

#sidebar-controls {
  display: none;
  position: absolute;
}
#sidebar-controls button {
  background-color: transparent;
  border: none;
  padding: 0;
}
#sidebar-controls i.fa {
  background-color: #fff;
  border: 1px solid #111;
  border-radius: 50%;
  color: #111;
  width: 32px;
  height: 32px;
  line-height: 32px;
}
#sidebar-controls .controls {
  display: none;
  margin-left: 15px;
}
#sidebar-controls #show-controls i.fa::before {
  content: "\f067";
}
#sidebar-controls.active .controls {
  display: inline-block;
}
#sidebar-controls.active #show-controls i.fa::before {
  content: "\f00d";
}

button {
  cursor: pointer;
  display: inline-block;
  font-size: 18px;
  padding: 0;
  height: 32px;
  width: 32px;
  text-align: center;
}
button:active, button:focus {
  outline: none;
}

HTML:

<div id="tooltip-controls">
  <button id="bold-button"><i class="fa fa-bold"></i></button>
  <button id="italic-button"><i class="fa fa-italic"></i></button>
  <button id="link-button"><i class="fa fa-link"></i></button>
  <button id="blockquote-button"><i class="fa fa-quote-right"></i></button>
  <button id="header-1-button"><i class="fa fa-header"><sub>1</sub></i></button>
  <button id="header-2-button"><i class="fa fa-header"><sub>2</sub></i></button>
</div>
<div id="sidebar-controls">
  <button id="show-controls"><i class="fa fa-plus"></i></button>
  <span class="controls">
    <button id="image-button"><i class="fa fa-camera"></i></button>
    <button id="video-button"><i class="fa fa-play"></i></button>
    <button id="tweet-button"><i class="fa fa-twitter"></i></button>
    <button id="divider-button"><i class="fa fa-minus"></i></button>
  </span>
</div>
<div id="editor-container">
  <p>Tell your story...</p>
</div>

http://stackoverflow.com/questions/36448800/how-to-show-or-hide-a-menu-when-i-scroll-down-or-up
https://www.abeautifulsite.net/how-to-make-rounded-images-with-css
(use focus and transition to expand and contract the search form?)

https://github.com/zenoamaro/react-quill
https://www.npmjs.com/package/html-to-react
https://www.npmjs.com/package/quilljs-renderer


From when I was messing around with React HTML formatting:

// let testState = {text: (<div><p>This is a story, there will be all sorts of weird <strong>formatting</strong> things happening.</p><h2>Like headers!</h2><p>And other stuff, like <em>italics!</em></p><blockquote><em>Oh and don't forget blockquotes! We love blockquotes!</em></blockquote><p>Yeah text is cool.</p></div>)};

// <div dangerouslySetInnerHTML={{ __html: this.state.text }} />

// { testState.text }

// let s = this.state.text;
// let htmlObject = document.createElement('div');
// htmlObject.innerHTML = s;
// let objectTwo = htmlObject.firstChild;
// console.log(htmlObject);
// console.log(objectTwo);

// let divTest = ('<div>' + this.state.text + '</div>');
